// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ZeroPadding.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ZeroPadding::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ZeroPadding::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> ZeroPadding::ap_ST_fsm_state1 = "1";
const sc_lv<4> ZeroPadding::ap_ST_fsm_state2 = "10";
const sc_lv<4> ZeroPadding::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> ZeroPadding::ap_ST_fsm_state6 = "1000";
const sc_lv<32> ZeroPadding::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool ZeroPadding::ap_const_boolean_1 = true;
const sc_lv<32> ZeroPadding::ap_const_lv32_2 = "10";
const bool ZeroPadding::ap_const_boolean_0 = false;
const sc_lv<1> ZeroPadding::ap_const_lv1_0 = "0";
const sc_lv<32> ZeroPadding::ap_const_lv32_1 = "1";
const sc_lv<1> ZeroPadding::ap_const_lv1_1 = "1";
const sc_lv<10> ZeroPadding::ap_const_lv10_0 = "0000000000";
const sc_lv<32> ZeroPadding::ap_const_lv32_3 = "11";
const sc_lv<10> ZeroPadding::ap_const_lv10_200 = "1000000000";
const sc_lv<10> ZeroPadding::ap_const_lv10_1 = "1";
const sc_lv<10> ZeroPadding::ap_const_lv10_5 = "101";
const sc_lv<10> ZeroPadding::ap_const_lv10_1FB = "111111011";
const sc_lv<8> ZeroPadding::ap_const_lv8_0 = "00000000";

ZeroPadding::ZeroPadding(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( fifo4_empty_n );
    sensitive << ( fifo5_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_4_i_reg_190 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_4_i_reg_190_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( fifo4_empty_n );
    sensitive << ( fifo5_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_4_i_reg_190 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_4_i_reg_190_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( fifo4_empty_n );
    sensitive << ( fifo5_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_4_i_reg_190 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_4_i_reg_190_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( fifo4_empty_n );
    sensitive << ( tmp_4_i_reg_190 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);
    sensitive << ( fifo5_full_n );
    sensitive << ( tmp_4_i_reg_190_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( tmp_4_i_fu_135_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( tmp_i_fu_105_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_i_fu_105_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_fifo4_blk_n);
    sensitive << ( fifo4_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_4_i_reg_190 );

    SC_METHOD(thread_fifo4_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_4_i_reg_190 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_fifo5_blk_n);
    sensitive << ( fifo5_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_4_i_reg_190_pp0_iter1_reg );

    SC_METHOD(thread_fifo5_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_4_i_reg_190_pp0_iter1_reg );
    sensitive << ( pix_1_reg_209 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_fifo5_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_4_i_reg_190_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_or_cond4_i_fu_163_p2);
    sensitive << ( tmp1_reg_185 );
    sensitive << ( tmp_fu_159_p2 );

    SC_METHOD(thread_pix_1_fu_168_p3);
    sensitive << ( fifo4_dout );
    sensitive << ( or_cond4_i_fu_163_p2 );

    SC_METHOD(thread_tmp1_fu_129_p2);
    sensitive << ( tmp_2_i_fu_117_p2 );
    sensitive << ( tmp_3_i_fu_123_p2 );

    SC_METHOD(thread_tmp_2_i_fu_117_p2);
    sensitive << ( tmp_i_fu_105_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( yi_i_reg_83 );

    SC_METHOD(thread_tmp_3_i_fu_123_p2);
    sensitive << ( tmp_i_fu_105_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( yi_i_reg_83 );

    SC_METHOD(thread_tmp_4_i_fu_135_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( xi_i_reg_94 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_8_i_fu_147_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( xi_i_reg_94 );
    sensitive << ( tmp_4_i_fu_135_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_9_i_fu_153_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( xi_i_reg_94 );
    sensitive << ( tmp_4_i_fu_135_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_fu_159_p2);
    sensitive << ( tmp_8_i_reg_199 );
    sensitive << ( tmp_9_i_reg_204 );

    SC_METHOD(thread_tmp_i_fu_105_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( yi_i_reg_83 );

    SC_METHOD(thread_xi_fu_141_p2);
    sensitive << ( xi_i_reg_94 );

    SC_METHOD(thread_yi_fu_111_p2);
    sensitive << ( yi_i_reg_83 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_i_fu_105_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_i_fu_135_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ZeroPadding_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, fifo4_dout, "(port)fifo4_dout");
    sc_trace(mVcdFile, fifo4_empty_n, "(port)fifo4_empty_n");
    sc_trace(mVcdFile, fifo4_read, "(port)fifo4_read");
    sc_trace(mVcdFile, fifo5_din, "(port)fifo5_din");
    sc_trace(mVcdFile, fifo5_full_n, "(port)fifo5_full_n");
    sc_trace(mVcdFile, fifo5_write, "(port)fifo5_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, fifo4_blk_n, "fifo4_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_4_i_reg_190, "tmp_4_i_reg_190");
    sc_trace(mVcdFile, fifo5_blk_n, "fifo5_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_4_i_reg_190_pp0_iter1_reg, "tmp_4_i_reg_190_pp0_iter1_reg");
    sc_trace(mVcdFile, xi_i_reg_94, "xi_i_reg_94");
    sc_trace(mVcdFile, tmp_i_fu_105_p2, "tmp_i_fu_105_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, yi_fu_111_p2, "yi_fu_111_p2");
    sc_trace(mVcdFile, yi_reg_180, "yi_reg_180");
    sc_trace(mVcdFile, tmp1_fu_129_p2, "tmp1_fu_129_p2");
    sc_trace(mVcdFile, tmp1_reg_185, "tmp1_reg_185");
    sc_trace(mVcdFile, tmp_4_i_fu_135_p2, "tmp_4_i_fu_135_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, xi_fu_141_p2, "xi_fu_141_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_8_i_fu_147_p2, "tmp_8_i_fu_147_p2");
    sc_trace(mVcdFile, tmp_8_i_reg_199, "tmp_8_i_reg_199");
    sc_trace(mVcdFile, tmp_9_i_fu_153_p2, "tmp_9_i_fu_153_p2");
    sc_trace(mVcdFile, tmp_9_i_reg_204, "tmp_9_i_reg_204");
    sc_trace(mVcdFile, pix_1_fu_168_p3, "pix_1_fu_168_p3");
    sc_trace(mVcdFile, pix_1_reg_209, "pix_1_reg_209");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, yi_i_reg_83, "yi_i_reg_83");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_2_i_fu_117_p2, "tmp_2_i_fu_117_p2");
    sc_trace(mVcdFile, tmp_3_i_fu_123_p2, "tmp_3_i_fu_123_p2");
    sc_trace(mVcdFile, tmp_fu_159_p2, "tmp_fu_159_p2");
    sc_trace(mVcdFile, or_cond4_i_fu_163_p2, "or_cond4_i_fu_163_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

ZeroPadding::~ZeroPadding() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void ZeroPadding::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(tmp_i_fu_105_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_105_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_105_p2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_105_p2.read()))) {
        xi_i_reg_94 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_135_p2.read()))) {
        xi_i_reg_94 = xi_fu_141_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        yi_i_reg_83 = yi_reg_180.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        yi_i_reg_83 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_4_i_reg_190.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        pix_1_reg_209 = pix_1_fu_168_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_105_p2.read()))) {
        tmp1_reg_185 = tmp1_fu_129_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_4_i_reg_190 = tmp_4_i_fu_135_p2.read();
        tmp_4_i_reg_190_pp0_iter1_reg = tmp_4_i_reg_190.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_135_p2.read()))) {
        tmp_8_i_reg_199 = tmp_8_i_fu_147_p2.read();
        tmp_9_i_reg_204 = tmp_9_i_fu_153_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        yi_reg_180 = yi_fu_111_p2.read();
    }
}

void ZeroPadding::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void ZeroPadding::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ZeroPadding::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ZeroPadding::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void ZeroPadding::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ZeroPadding::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_4_i_reg_190.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo4_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_reg_190_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo5_full_n.read())));
}

void ZeroPadding::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_4_i_reg_190.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo4_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_reg_190_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo5_full_n.read())));
}

void ZeroPadding::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_4_i_reg_190.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo4_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_reg_190_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo5_full_n.read())));
}

void ZeroPadding::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void ZeroPadding::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ZeroPadding::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(tmp_4_i_reg_190.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, fifo4_empty_n.read()));
}

void ZeroPadding::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_reg_190_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo5_full_n.read()));
}

void ZeroPadding::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(tmp_4_i_fu_135_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void ZeroPadding::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_105_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void ZeroPadding::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void ZeroPadding::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ZeroPadding::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void ZeroPadding::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_105_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ZeroPadding::thread_fifo4_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_4_i_reg_190.read(), ap_const_lv1_0))) {
        fifo4_blk_n = fifo4_empty_n.read();
    } else {
        fifo4_blk_n = ap_const_logic_1;
    }
}

void ZeroPadding::thread_fifo4_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_4_i_reg_190.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo4_read = ap_const_logic_1;
    } else {
        fifo4_read = ap_const_logic_0;
    }
}

void ZeroPadding::thread_fifo5_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_reg_190_pp0_iter1_reg.read()))) {
        fifo5_blk_n = fifo5_full_n.read();
    } else {
        fifo5_blk_n = ap_const_logic_1;
    }
}

void ZeroPadding::thread_fifo5_din() {
    fifo5_din = pix_1_reg_209.read();
}

void ZeroPadding::thread_fifo5_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_reg_190_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo5_write = ap_const_logic_1;
    } else {
        fifo5_write = ap_const_logic_0;
    }
}

void ZeroPadding::thread_or_cond4_i_fu_163_p2() {
    or_cond4_i_fu_163_p2 = (tmp1_reg_185.read() & tmp_fu_159_p2.read());
}

void ZeroPadding::thread_pix_1_fu_168_p3() {
    pix_1_fu_168_p3 = (!or_cond4_i_fu_163_p2.read()[0].is_01())? sc_lv<8>(): ((or_cond4_i_fu_163_p2.read()[0].to_bool())? fifo4_dout.read(): ap_const_lv8_0);
}

void ZeroPadding::thread_tmp1_fu_129_p2() {
    tmp1_fu_129_p2 = (tmp_2_i_fu_117_p2.read() & tmp_3_i_fu_123_p2.read());
}

void ZeroPadding::thread_tmp_2_i_fu_117_p2() {
    tmp_2_i_fu_117_p2 = (!yi_i_reg_83.read().is_01() || !ap_const_lv10_5.is_01())? sc_lv<1>(): (sc_biguint<10>(yi_i_reg_83.read()) > sc_biguint<10>(ap_const_lv10_5));
}

void ZeroPadding::thread_tmp_3_i_fu_123_p2() {
    tmp_3_i_fu_123_p2 = (!yi_i_reg_83.read().is_01() || !ap_const_lv10_1FB.is_01())? sc_lv<1>(): (sc_biguint<10>(yi_i_reg_83.read()) < sc_biguint<10>(ap_const_lv10_1FB));
}

void ZeroPadding::thread_tmp_4_i_fu_135_p2() {
    tmp_4_i_fu_135_p2 = (!xi_i_reg_94.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(xi_i_reg_94.read() == ap_const_lv10_200);
}

void ZeroPadding::thread_tmp_8_i_fu_147_p2() {
    tmp_8_i_fu_147_p2 = (!xi_i_reg_94.read().is_01() || !ap_const_lv10_5.is_01())? sc_lv<1>(): (sc_biguint<10>(xi_i_reg_94.read()) > sc_biguint<10>(ap_const_lv10_5));
}

void ZeroPadding::thread_tmp_9_i_fu_153_p2() {
    tmp_9_i_fu_153_p2 = (!xi_i_reg_94.read().is_01() || !ap_const_lv10_1FB.is_01())? sc_lv<1>(): (sc_biguint<10>(xi_i_reg_94.read()) < sc_biguint<10>(ap_const_lv10_1FB));
}

void ZeroPadding::thread_tmp_fu_159_p2() {
    tmp_fu_159_p2 = (tmp_8_i_reg_199.read() & tmp_9_i_reg_204.read());
}

void ZeroPadding::thread_tmp_i_fu_105_p2() {
    tmp_i_fu_105_p2 = (!yi_i_reg_83.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(yi_i_reg_83.read() == ap_const_lv10_200);
}

void ZeroPadding::thread_xi_fu_141_p2() {
    xi_fu_141_p2 = (!xi_i_reg_94.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(xi_i_reg_94.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void ZeroPadding::thread_yi_fu_111_p2() {
    yi_fu_111_p2 = (!yi_i_reg_83.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(yi_i_reg_83.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void ZeroPadding::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_i_fu_105_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_4_i_fu_135_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_4_i_fu_135_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

