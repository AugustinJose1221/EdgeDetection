// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _HystThreshold_HH_
#define _HystThreshold_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct HystThreshold : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > hist_hthr_dout;
    sc_in< sc_logic > hist_hthr_empty_n;
    sc_out< sc_logic > hist_hthr_read;
    sc_in< sc_lv<8> > hist_lthr_dout;
    sc_in< sc_logic > hist_lthr_empty_n;
    sc_out< sc_logic > hist_lthr_read;
    sc_in< sc_lv<8> > fifo5_dout;
    sc_in< sc_logic > fifo5_empty_n;
    sc_out< sc_logic > fifo5_read;
    sc_out< sc_lv<8> > fifo6_din;
    sc_in< sc_logic > fifo6_full_n;
    sc_out< sc_logic > fifo6_write;


    // Module declarations
    HystThreshold(sc_module_name name);
    SC_HAS_PROCESS(HystThreshold);

    ~HystThreshold();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > hist_hthr_blk_n;
    sc_signal< sc_logic > hist_lthr_blk_n;
    sc_signal< sc_logic > fifo5_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_54_i_i_i_reg_230;
    sc_signal< sc_logic > fifo6_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > tmp_54_i_i_i_reg_230_pp0_iter1_reg;
    sc_signal< sc_lv<10> > xi_i_i_i_reg_136;
    sc_signal< sc_lv<8> > hist_hthr_read_reg_211;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<8> > hist_lthr_read_reg_216;
    sc_signal< sc_lv<1> > tmp_i_i_i_fu_147_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > yi_fu_153_p2;
    sc_signal< sc_lv<10> > yi_reg_225;
    sc_signal< sc_lv<1> > tmp_54_i_i_i_fu_159_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > xi_fu_165_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_57_i_i_i_fu_171_p2;
    sc_signal< sc_lv<1> > tmp_57_i_i_i_reg_239;
    sc_signal< sc_lv<1> > tmp_58_i_i_i_fu_176_p2;
    sc_signal< sc_lv<1> > tmp_58_i_i_i_reg_245;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_lv<10> > yi_i_i_i_reg_125;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > not_tmp_57_i_i_i_fu_181_p2;
    sc_signal< sc_lv<1> > tmp_fu_194_p2;
    sc_signal< sc_lv<2> > pix_hyst_i_i_i_cast_fu_186_p3;
    sc_signal< sc_lv<2> > pix_hyst_1_i_i_i_fu_198_p3;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_fifo5_blk_n();
    void thread_fifo5_read();
    void thread_fifo6_blk_n();
    void thread_fifo6_din();
    void thread_fifo6_write();
    void thread_hist_hthr_blk_n();
    void thread_hist_hthr_read();
    void thread_hist_lthr_blk_n();
    void thread_hist_lthr_read();
    void thread_internal_ap_ready();
    void thread_not_tmp_57_i_i_i_fu_181_p2();
    void thread_pix_hyst_1_i_i_i_fu_198_p3();
    void thread_pix_hyst_i_i_i_cast_fu_186_p3();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_54_i_i_i_fu_159_p2();
    void thread_tmp_57_i_i_i_fu_171_p2();
    void thread_tmp_58_i_i_i_fu_176_p2();
    void thread_tmp_fu_194_p2();
    void thread_tmp_i_i_i_fu_147_p2();
    void thread_xi_fu_165_p2();
    void thread_yi_fu_153_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
