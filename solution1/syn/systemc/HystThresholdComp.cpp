// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "HystThresholdComp.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic HystThresholdComp::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic HystThresholdComp::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> HystThresholdComp::ap_ST_fsm_state1 = "1";
const sc_lv<4> HystThresholdComp::ap_ST_fsm_state2 = "10";
const sc_lv<4> HystThresholdComp::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> HystThresholdComp::ap_ST_fsm_state6 = "1000";
const bool HystThresholdComp::ap_const_boolean_1 = true;
const sc_lv<32> HystThresholdComp::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> HystThresholdComp::ap_const_lv32_2 = "10";
const bool HystThresholdComp::ap_const_boolean_0 = false;
const sc_lv<1> HystThresholdComp::ap_const_lv1_0 = "0";
const sc_lv<32> HystThresholdComp::ap_const_lv32_1 = "1";
const sc_lv<1> HystThresholdComp::ap_const_lv1_1 = "1";
const sc_lv<10> HystThresholdComp::ap_const_lv10_0 = "0000000000";
const sc_lv<32> HystThresholdComp::ap_const_lv32_3 = "11";
const sc_lv<10> HystThresholdComp::ap_const_lv10_200 = "1000000000";
const sc_lv<10> HystThresholdComp::ap_const_lv10_1 = "1";
const sc_lv<32> HystThresholdComp::ap_const_lv32_8 = "1000";
const sc_lv<32> HystThresholdComp::ap_const_lv32_F = "1111";
const sc_lv<32> HystThresholdComp::ap_const_lv32_10 = "10000";
const sc_lv<32> HystThresholdComp::ap_const_lv32_17 = "10111";
const sc_lv<8> HystThresholdComp::ap_const_lv8_FF = "11111111";
const sc_lv<8> HystThresholdComp::ap_const_lv8_0 = "00000000";

HystThresholdComp::HystThresholdComp(sc_module_name name) : sc_module(name), mVcdFile(0) {
    line_buf_U = new Sobel_512u_512u_sfYi("line_buf_U");
    line_buf_U->clk(ap_clk);
    line_buf_U->reset(ap_rst);
    line_buf_U->address0(line_buf_address0);
    line_buf_U->ce0(line_buf_ce0);
    line_buf_U->q0(line_buf_q0);
    line_buf_U->address1(line_buf_addr_reg_463);
    line_buf_U->ce1(line_buf_ce1);
    line_buf_U->we1(line_buf_we1);
    line_buf_U->d1(line_buf_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( fifo6_empty_n );
    sensitive << ( fifo7_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_49_i_reg_454_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( fifo6_empty_n );
    sensitive << ( fifo7_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_49_i_reg_454_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( fifo6_empty_n );
    sensitive << ( fifo7_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_49_i_reg_454_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( fifo6_empty_n );
    sensitive << ( tmp_49_i_reg_454 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);
    sensitive << ( fifo7_full_n );
    sensitive << ( tmp_49_i_reg_454_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter1_state4);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( tmp_i_fu_163_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_fifo6_blk_n);
    sensitive << ( fifo6_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_49_i_reg_454 );

    SC_METHOD(thread_fifo6_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_fifo7_blk_n);
    sensitive << ( fifo7_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_49_i_reg_454_pp0_iter1_reg );

    SC_METHOD(thread_fifo7_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_49_i_reg_454_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( pix_hyst_3_2_2_i_fu_395_p2 );

    SC_METHOD(thread_fifo7_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_49_i_reg_454_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( tmp_i_fu_163_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_line_buf_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_50_i_fu_187_p1 );

    SC_METHOD(thread_line_buf_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_line_buf_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buf_d1);
    sensitive << ( fifo6_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_26_i_fu_230_p4 );

    SC_METHOD(thread_line_buf_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_not_tmp_53_i_fu_255_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( window_buf_1_1_3_fu_96 );

    SC_METHOD(thread_p_pix_hyst_1_1_2_i_fu_315_p2);
    sensitive << ( not_tmp_53_i_fu_255_p2 );
    sensitive << ( tmp_78_1_2_i_fu_309_p2 );

    SC_METHOD(thread_p_pix_hyst_1_2_1_i9_fu_381_p2);
    sensitive << ( tmp_78_2_1_i_reg_479 );
    sensitive << ( tmp_78_2_2_i_reg_484 );

    SC_METHOD(thread_pix_hyst_3_0_2_i3_fu_291_p2);
    sensitive << ( tmp4_fu_285_p2 );
    sensitive << ( tmp_fu_279_p2 );

    SC_METHOD(thread_pix_hyst_3_1_i_fu_297_p2);
    sensitive << ( not_tmp_53_i_fu_255_p2 );
    sensitive << ( pix_hyst_3_0_2_i3_fu_291_p2 );

    SC_METHOD(thread_pix_hyst_3_2_2_i_fu_395_p2);
    sensitive << ( tmp5_reg_489 );
    sensitive << ( tmp7_fu_390_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp2_fu_385_p2);
    sensitive << ( tmp_78_2_i_reg_474 );
    sensitive << ( p_pix_hyst_1_2_1_i9_fu_381_p2 );

    SC_METHOD(thread_tmp4_fu_285_p2);
    sensitive << ( tmp_78_0_2_i_fu_267_p2 );
    sensitive << ( tmp_78_1_i_fu_273_p2 );

    SC_METHOD(thread_tmp5_fu_345_p2);
    sensitive << ( tmp6_fu_339_p2 );
    sensitive << ( pix_hyst_3_1_i_fu_297_p2 );

    SC_METHOD(thread_tmp6_fu_339_p2);
    sensitive << ( tmp_78_1_1_i_fu_303_p2 );
    sensitive << ( p_pix_hyst_1_1_2_i_fu_315_p2 );

    SC_METHOD(thread_tmp7_fu_390_p2);
    sensitive << ( not_tmp_53_i_reg_469 );
    sensitive << ( tmp2_fu_385_p2 );

    SC_METHOD(thread_tmp_26_i_fu_230_p4);
    sensitive << ( line_buf_q0 );

    SC_METHOD(thread_tmp_49_i_fu_175_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( xi_i_reg_152 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_50_i_fu_187_p1);
    sensitive << ( xi_i_reg_152 );

    SC_METHOD(thread_tmp_78_0_1_i_fu_261_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( window_buf_0_1_3_fu_88 );

    SC_METHOD(thread_tmp_78_0_2_i_fu_267_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( window_buf_0_2_fu_210_p4 );

    SC_METHOD(thread_tmp_78_0_i_fu_249_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( window_buf_0_1_fu_84 );

    SC_METHOD(thread_tmp_78_1_1_i_fu_303_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( window_buf_1_1_3_fu_96 );

    SC_METHOD(thread_tmp_78_1_2_i_fu_309_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( window_buf_1_2_fu_220_p4 );

    SC_METHOD(thread_tmp_78_1_i_fu_273_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( window_buf_1_1_fu_92 );

    SC_METHOD(thread_tmp_78_2_1_i_fu_327_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( window_buf_2_1_3_fu_104 );

    SC_METHOD(thread_tmp_78_2_2_i_fu_333_p2);
    sensitive << ( fifo6_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_78_2_i_fu_321_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_49_i_reg_454 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( window_buf_2_1_fu_100 );

    SC_METHOD(thread_tmp_fu_279_p2);
    sensitive << ( tmp_78_0_i_fu_249_p2 );
    sensitive << ( tmp_78_0_1_i_fu_261_p2 );

    SC_METHOD(thread_tmp_i_fu_163_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( yi_i_reg_141 );

    SC_METHOD(thread_window_buf_0_2_fu_210_p4);
    sensitive << ( line_buf_q0 );

    SC_METHOD(thread_window_buf_1_2_fu_220_p4);
    sensitive << ( line_buf_q0 );

    SC_METHOD(thread_xi_fu_181_p2);
    sensitive << ( xi_i_reg_152 );

    SC_METHOD(thread_yi_fu_169_p2);
    sensitive << ( yi_i_reg_141 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_i_fu_163_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "HystThresholdComp_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, fifo6_dout, "(port)fifo6_dout");
    sc_trace(mVcdFile, fifo6_empty_n, "(port)fifo6_empty_n");
    sc_trace(mVcdFile, fifo6_read, "(port)fifo6_read");
    sc_trace(mVcdFile, fifo7_din, "(port)fifo7_din");
    sc_trace(mVcdFile, fifo7_full_n, "(port)fifo7_full_n");
    sc_trace(mVcdFile, fifo7_write, "(port)fifo7_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, fifo6_blk_n, "fifo6_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_49_i_reg_454, "tmp_49_i_reg_454");
    sc_trace(mVcdFile, fifo7_blk_n, "fifo7_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_49_i_reg_454_pp0_iter1_reg, "tmp_49_i_reg_454_pp0_iter1_reg");
    sc_trace(mVcdFile, xi_i_reg_152, "xi_i_reg_152");
    sc_trace(mVcdFile, tmp_i_fu_163_p2, "tmp_i_fu_163_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, yi_fu_169_p2, "yi_fu_169_p2");
    sc_trace(mVcdFile, yi_reg_449, "yi_reg_449");
    sc_trace(mVcdFile, tmp_49_i_fu_175_p2, "tmp_49_i_fu_175_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, xi_fu_181_p2, "xi_fu_181_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, line_buf_addr_reg_463, "line_buf_addr_reg_463");
    sc_trace(mVcdFile, not_tmp_53_i_fu_255_p2, "not_tmp_53_i_fu_255_p2");
    sc_trace(mVcdFile, not_tmp_53_i_reg_469, "not_tmp_53_i_reg_469");
    sc_trace(mVcdFile, tmp_78_2_i_fu_321_p2, "tmp_78_2_i_fu_321_p2");
    sc_trace(mVcdFile, tmp_78_2_i_reg_474, "tmp_78_2_i_reg_474");
    sc_trace(mVcdFile, tmp_78_2_1_i_fu_327_p2, "tmp_78_2_1_i_fu_327_p2");
    sc_trace(mVcdFile, tmp_78_2_1_i_reg_479, "tmp_78_2_1_i_reg_479");
    sc_trace(mVcdFile, tmp_78_2_2_i_fu_333_p2, "tmp_78_2_2_i_fu_333_p2");
    sc_trace(mVcdFile, tmp_78_2_2_i_reg_484, "tmp_78_2_2_i_reg_484");
    sc_trace(mVcdFile, tmp5_fu_345_p2, "tmp5_fu_345_p2");
    sc_trace(mVcdFile, tmp5_reg_489, "tmp5_reg_489");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter1_state4, "ap_condition_pp0_exit_iter1_state4");
    sc_trace(mVcdFile, line_buf_address0, "line_buf_address0");
    sc_trace(mVcdFile, line_buf_ce0, "line_buf_ce0");
    sc_trace(mVcdFile, line_buf_q0, "line_buf_q0");
    sc_trace(mVcdFile, line_buf_ce1, "line_buf_ce1");
    sc_trace(mVcdFile, line_buf_we1, "line_buf_we1");
    sc_trace(mVcdFile, line_buf_d1, "line_buf_d1");
    sc_trace(mVcdFile, yi_i_reg_141, "yi_i_reg_141");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_50_i_fu_187_p1, "tmp_50_i_fu_187_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, window_buf_0_1_fu_84, "window_buf_0_1_fu_84");
    sc_trace(mVcdFile, window_buf_0_1_3_fu_88, "window_buf_0_1_3_fu_88");
    sc_trace(mVcdFile, window_buf_0_2_fu_210_p4, "window_buf_0_2_fu_210_p4");
    sc_trace(mVcdFile, window_buf_1_1_fu_92, "window_buf_1_1_fu_92");
    sc_trace(mVcdFile, window_buf_1_1_3_fu_96, "window_buf_1_1_3_fu_96");
    sc_trace(mVcdFile, window_buf_1_2_fu_220_p4, "window_buf_1_2_fu_220_p4");
    sc_trace(mVcdFile, window_buf_2_1_fu_100, "window_buf_2_1_fu_100");
    sc_trace(mVcdFile, window_buf_2_1_3_fu_104, "window_buf_2_1_3_fu_104");
    sc_trace(mVcdFile, tmp_26_i_fu_230_p4, "tmp_26_i_fu_230_p4");
    sc_trace(mVcdFile, tmp_78_0_i_fu_249_p2, "tmp_78_0_i_fu_249_p2");
    sc_trace(mVcdFile, tmp_78_0_1_i_fu_261_p2, "tmp_78_0_1_i_fu_261_p2");
    sc_trace(mVcdFile, tmp_78_0_2_i_fu_267_p2, "tmp_78_0_2_i_fu_267_p2");
    sc_trace(mVcdFile, tmp_78_1_i_fu_273_p2, "tmp_78_1_i_fu_273_p2");
    sc_trace(mVcdFile, tmp4_fu_285_p2, "tmp4_fu_285_p2");
    sc_trace(mVcdFile, tmp_fu_279_p2, "tmp_fu_279_p2");
    sc_trace(mVcdFile, pix_hyst_3_0_2_i3_fu_291_p2, "pix_hyst_3_0_2_i3_fu_291_p2");
    sc_trace(mVcdFile, tmp_78_1_2_i_fu_309_p2, "tmp_78_1_2_i_fu_309_p2");
    sc_trace(mVcdFile, tmp_78_1_1_i_fu_303_p2, "tmp_78_1_1_i_fu_303_p2");
    sc_trace(mVcdFile, p_pix_hyst_1_1_2_i_fu_315_p2, "p_pix_hyst_1_1_2_i_fu_315_p2");
    sc_trace(mVcdFile, tmp6_fu_339_p2, "tmp6_fu_339_p2");
    sc_trace(mVcdFile, pix_hyst_3_1_i_fu_297_p2, "pix_hyst_3_1_i_fu_297_p2");
    sc_trace(mVcdFile, p_pix_hyst_1_2_1_i9_fu_381_p2, "p_pix_hyst_1_2_1_i9_fu_381_p2");
    sc_trace(mVcdFile, tmp2_fu_385_p2, "tmp2_fu_385_p2");
    sc_trace(mVcdFile, tmp7_fu_390_p2, "tmp7_fu_390_p2");
    sc_trace(mVcdFile, pix_hyst_3_2_2_i_fu_395_p2, "pix_hyst_3_2_2_i_fu_395_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

HystThresholdComp::~HystThresholdComp() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete line_buf_U;
}

void HystThresholdComp::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(tmp_i_fu_163_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(tmp_49_i_fu_175_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_163_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_163_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter1_state4.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter1_state4.read()))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_163_p2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_163_p2.read()))) {
        xi_i_reg_152 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_49_i_fu_175_p2.read()))) {
        xi_i_reg_152 = xi_fu_181_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        yi_i_reg_141 = yi_reg_449.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        yi_i_reg_141 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_49_i_fu_175_p2.read()))) {
        line_buf_addr_reg_463 =  (sc_lv<9>) (tmp_50_i_fu_187_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_49_i_reg_454.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        not_tmp_53_i_reg_469 = not_tmp_53_i_fu_255_p2.read();
        tmp5_reg_489 = tmp5_fu_345_p2.read();
        tmp_78_2_1_i_reg_479 = tmp_78_2_1_i_fu_327_p2.read();
        tmp_78_2_2_i_reg_484 = tmp_78_2_2_i_fu_333_p2.read();
        tmp_78_2_i_reg_474 = tmp_78_2_i_fu_321_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_49_i_reg_454 = tmp_49_i_fu_175_p2.read();
        tmp_49_i_reg_454_pp0_iter1_reg = tmp_49_i_reg_454.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_49_i_reg_454.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        window_buf_0_1_3_fu_88 = line_buf_q0.read().range(15, 8);
        window_buf_0_1_fu_84 = window_buf_0_1_3_fu_88.read();
        window_buf_1_1_3_fu_96 = line_buf_q0.read().range(23, 16);
        window_buf_1_1_fu_92 = window_buf_1_1_3_fu_96.read();
        window_buf_2_1_3_fu_104 = fifo6_dout.read();
        window_buf_2_1_fu_100 = window_buf_2_1_3_fu_104.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        yi_reg_449 = yi_fu_169_p2.read();
    }
}

void HystThresholdComp::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void HystThresholdComp::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void HystThresholdComp::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void HystThresholdComp::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void HystThresholdComp::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void HystThresholdComp::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_49_i_reg_454.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo6_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_49_i_reg_454_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo7_full_n.read())));
}

void HystThresholdComp::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_49_i_reg_454.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo6_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_49_i_reg_454_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo7_full_n.read())));
}

void HystThresholdComp::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_49_i_reg_454.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo6_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_49_i_reg_454_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo7_full_n.read())));
}

void HystThresholdComp::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void HystThresholdComp::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void HystThresholdComp::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(tmp_49_i_reg_454.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, fifo6_empty_n.read()));
}

void HystThresholdComp::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_49_i_reg_454_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo7_full_n.read()));
}

void HystThresholdComp::thread_ap_condition_pp0_exit_iter1_state4() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
        ap_condition_pp0_exit_iter1_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter1_state4 = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_163_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void HystThresholdComp::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void HystThresholdComp::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void HystThresholdComp::thread_fifo6_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_49_i_reg_454.read(), ap_const_lv1_0))) {
        fifo6_blk_n = fifo6_empty_n.read();
    } else {
        fifo6_blk_n = ap_const_logic_1;
    }
}

void HystThresholdComp::thread_fifo6_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_49_i_reg_454.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo6_read = ap_const_logic_1;
    } else {
        fifo6_read = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_fifo7_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_49_i_reg_454_pp0_iter1_reg.read()))) {
        fifo7_blk_n = fifo7_full_n.read();
    } else {
        fifo7_blk_n = ap_const_logic_1;
    }
}

void HystThresholdComp::thread_fifo7_din() {
    fifo7_din = (!pix_hyst_3_2_2_i_fu_395_p2.read()[0].is_01())? sc_lv<8>(): ((pix_hyst_3_2_2_i_fu_395_p2.read()[0].to_bool())? ap_const_lv8_FF: ap_const_lv8_0);
}

void HystThresholdComp::thread_fifo7_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_49_i_reg_454_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo7_write = ap_const_logic_1;
    } else {
        fifo7_write = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_163_p2.read(), ap_const_lv1_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_line_buf_address0() {
    line_buf_address0 =  (sc_lv<9>) (tmp_50_i_fu_187_p1.read());
}

void HystThresholdComp::thread_line_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        line_buf_ce0 = ap_const_logic_1;
    } else {
        line_buf_ce0 = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_line_buf_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buf_ce1 = ap_const_logic_1;
    } else {
        line_buf_ce1 = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_line_buf_d1() {
    line_buf_d1 = esl_concat<8,16>(fifo6_dout.read(), tmp_26_i_fu_230_p4.read());
}

void HystThresholdComp::thread_line_buf_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_49_i_reg_454.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buf_we1 = ap_const_logic_1;
    } else {
        line_buf_we1 = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_not_tmp_53_i_fu_255_p2() {
    not_tmp_53_i_fu_255_p2 = (!window_buf_1_1_3_fu_96.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(window_buf_1_1_3_fu_96.read() != ap_const_lv8_0);
}

void HystThresholdComp::thread_p_pix_hyst_1_1_2_i_fu_315_p2() {
    p_pix_hyst_1_1_2_i_fu_315_p2 = (tmp_78_1_2_i_fu_309_p2.read() & not_tmp_53_i_fu_255_p2.read());
}

void HystThresholdComp::thread_p_pix_hyst_1_2_1_i9_fu_381_p2() {
    p_pix_hyst_1_2_1_i9_fu_381_p2 = (tmp_78_2_1_i_reg_479.read() | tmp_78_2_2_i_reg_484.read());
}

void HystThresholdComp::thread_pix_hyst_3_0_2_i3_fu_291_p2() {
    pix_hyst_3_0_2_i3_fu_291_p2 = (tmp4_fu_285_p2.read() | tmp_fu_279_p2.read());
}

void HystThresholdComp::thread_pix_hyst_3_1_i_fu_297_p2() {
    pix_hyst_3_1_i_fu_297_p2 = (pix_hyst_3_0_2_i3_fu_291_p2.read() & not_tmp_53_i_fu_255_p2.read());
}

void HystThresholdComp::thread_pix_hyst_3_2_2_i_fu_395_p2() {
    pix_hyst_3_2_2_i_fu_395_p2 = (tmp7_fu_390_p2.read() | tmp5_reg_489.read());
}

void HystThresholdComp::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void HystThresholdComp::thread_start_out() {
    start_out = real_start.read();
}

void HystThresholdComp::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void HystThresholdComp::thread_tmp2_fu_385_p2() {
    tmp2_fu_385_p2 = (p_pix_hyst_1_2_1_i9_fu_381_p2.read() | tmp_78_2_i_reg_474.read());
}

void HystThresholdComp::thread_tmp4_fu_285_p2() {
    tmp4_fu_285_p2 = (tmp_78_0_2_i_fu_267_p2.read() | tmp_78_1_i_fu_273_p2.read());
}

void HystThresholdComp::thread_tmp5_fu_345_p2() {
    tmp5_fu_345_p2 = (tmp6_fu_339_p2.read() | pix_hyst_3_1_i_fu_297_p2.read());
}

void HystThresholdComp::thread_tmp6_fu_339_p2() {
    tmp6_fu_339_p2 = (tmp_78_1_1_i_fu_303_p2.read() | p_pix_hyst_1_1_2_i_fu_315_p2.read());
}

void HystThresholdComp::thread_tmp7_fu_390_p2() {
    tmp7_fu_390_p2 = (tmp2_fu_385_p2.read() & not_tmp_53_i_reg_469.read());
}

void HystThresholdComp::thread_tmp_26_i_fu_230_p4() {
    tmp_26_i_fu_230_p4 = line_buf_q0.read().range(23, 8);
}

void HystThresholdComp::thread_tmp_49_i_fu_175_p2() {
    tmp_49_i_fu_175_p2 = (!xi_i_reg_152.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(xi_i_reg_152.read() == ap_const_lv10_200);
}

void HystThresholdComp::thread_tmp_50_i_fu_187_p1() {
    tmp_50_i_fu_187_p1 = esl_zext<64,10>(xi_i_reg_152.read());
}

void HystThresholdComp::thread_tmp_78_0_1_i_fu_261_p2() {
    tmp_78_0_1_i_fu_261_p2 = (!window_buf_0_1_3_fu_88.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(window_buf_0_1_3_fu_88.read() == ap_const_lv8_FF);
}

void HystThresholdComp::thread_tmp_78_0_2_i_fu_267_p2() {
    tmp_78_0_2_i_fu_267_p2 = (!window_buf_0_2_fu_210_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(window_buf_0_2_fu_210_p4.read() == ap_const_lv8_FF);
}

void HystThresholdComp::thread_tmp_78_0_i_fu_249_p2() {
    tmp_78_0_i_fu_249_p2 = (!window_buf_0_1_fu_84.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(window_buf_0_1_fu_84.read() == ap_const_lv8_FF);
}

void HystThresholdComp::thread_tmp_78_1_1_i_fu_303_p2() {
    tmp_78_1_1_i_fu_303_p2 = (!window_buf_1_1_3_fu_96.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(window_buf_1_1_3_fu_96.read() == ap_const_lv8_FF);
}

void HystThresholdComp::thread_tmp_78_1_2_i_fu_309_p2() {
    tmp_78_1_2_i_fu_309_p2 = (!window_buf_1_2_fu_220_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(window_buf_1_2_fu_220_p4.read() == ap_const_lv8_FF);
}

void HystThresholdComp::thread_tmp_78_1_i_fu_273_p2() {
    tmp_78_1_i_fu_273_p2 = (!window_buf_1_1_fu_92.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(window_buf_1_1_fu_92.read() == ap_const_lv8_FF);
}

void HystThresholdComp::thread_tmp_78_2_1_i_fu_327_p2() {
    tmp_78_2_1_i_fu_327_p2 = (!window_buf_2_1_3_fu_104.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(window_buf_2_1_3_fu_104.read() == ap_const_lv8_FF);
}

void HystThresholdComp::thread_tmp_78_2_2_i_fu_333_p2() {
    tmp_78_2_2_i_fu_333_p2 = (!fifo6_dout.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(fifo6_dout.read() == ap_const_lv8_FF);
}

void HystThresholdComp::thread_tmp_78_2_i_fu_321_p2() {
    tmp_78_2_i_fu_321_p2 = (!window_buf_2_1_fu_100.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(window_buf_2_1_fu_100.read() == ap_const_lv8_FF);
}

void HystThresholdComp::thread_tmp_fu_279_p2() {
    tmp_fu_279_p2 = (tmp_78_0_i_fu_249_p2.read() | tmp_78_0_1_i_fu_261_p2.read());
}

void HystThresholdComp::thread_tmp_i_fu_163_p2() {
    tmp_i_fu_163_p2 = (!yi_i_reg_141.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(yi_i_reg_141.read() == ap_const_lv10_200);
}

void HystThresholdComp::thread_window_buf_0_2_fu_210_p4() {
    window_buf_0_2_fu_210_p4 = line_buf_q0.read().range(15, 8);
}

void HystThresholdComp::thread_window_buf_1_2_fu_220_p4() {
    window_buf_1_2_fu_220_p4 = line_buf_q0.read().range(23, 16);
}

void HystThresholdComp::thread_xi_fu_181_p2() {
    xi_fu_181_p2 = (!xi_i_reg_152.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(xi_i_reg_152.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void HystThresholdComp::thread_yi_fu_169_p2() {
    yi_fu_169_p2 = (!yi_i_reg_141.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(yi_i_reg_141.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void HystThresholdComp::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_i_fu_163_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

