// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _canny_edge_detection_HH_
#define _canny_edge_detection_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "canny_edge_detection_1_1.h"
#include "AXIS2GrayArray76.h"
#include "GaussianBlur.h"
#include "Sobel_512u_512u_s.h"
#include "NonMaxSuppression.h"
#include "ZeroPadding.h"
#include "HystThreshold.h"
#include "HystThresholdComp.h"
#include "GrayArray2AXIS.h"
#include "fifo_w8_d2_A.h"
#include "fifo_w8_d6_A.h"
#include "fifo_w8_d1_A.h"
#include "fifo_w2_d1_A.h"
#include "start_for_Gaussiaocq.h"
#include "start_for_HystThrpcA.h"
#include "start_for_Sobel_5qcK.h"
#include "start_for_NonMaxSrcU.h"
#include "start_for_ZeroPadsc4.h"
#include "start_for_HystThrtde.h"
#include "start_for_GrayArrudo.h"
#include "canny_edge_detection_CONTROL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32>
struct canny_edge_detection : public sc_module {
    // Port declarations 31
    sc_in< sc_logic > s_axi_CONTROL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CONTROL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH/8> > s_axi_CONTROL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CONTROL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CONTROL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CONTROL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in_clk s_axi_aclk;
    sc_in< sc_logic > ap_rst_n_s_axi_aclk;
    sc_in< sc_lv<24> > axis_in_TDATA;
    sc_in< sc_lv<1> > axis_in_TUSER;
    sc_in< sc_lv<1> > axis_in_TLAST;
    sc_out< sc_lv<24> > axis_out_TDATA;
    sc_out< sc_lv<1> > axis_out_TUSER;
    sc_out< sc_lv<1> > axis_out_TLAST;
    sc_in< sc_logic > axis_in_TVALID;
    sc_out< sc_logic > axis_in_TREADY;
    sc_out< sc_logic > axis_out_TVALID;
    sc_in< sc_logic > axis_out_TREADY;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    canny_edge_detection(sc_module_name name);
    SC_HAS_PROCESS(canny_edge_detection);

    ~canny_edge_detection();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    canny_edge_detection_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>* canny_edge_detection_CONTROL_BUS_s_axi_U;
    canny_edge_detection_1_1* canny_edge_detection_1_1_U0;
    AXIS2GrayArray76* AXIS2GrayArray76_U0;
    GaussianBlur* GaussianBlur_U0;
    Sobel_512u_512u_s* Sobel_512u_512u_U0;
    NonMaxSuppression* NonMaxSuppression_U0;
    ZeroPadding* ZeroPadding_U0;
    HystThreshold* HystThreshold_U0;
    HystThresholdComp* HystThresholdComp_U0;
    GrayArray2AXIS* GrayArray2AXIS_U0;
    fifo_w8_d2_A* hist_hthr_c1_U;
    fifo_w8_d2_A* hist_lthr_c2_U;
    fifo_w8_d6_A* hist_hthr_c_U;
    fifo_w8_d6_A* hist_lthr_c_U;
    fifo_w8_d1_A* fifo1_U;
    fifo_w8_d1_A* fifo2_U;
    fifo_w8_d1_A* fifo3_value_U;
    fifo_w2_d1_A* fifo3_grad_U;
    fifo_w8_d1_A* fifo4_U;
    fifo_w8_d1_A* fifo5_U;
    fifo_w8_d1_A* fifo6_U;
    fifo_w8_d1_A* fifo7_U;
    start_for_Gaussiaocq* start_for_Gaussiaocq_U;
    start_for_HystThrpcA* start_for_HystThrpcA_U;
    start_for_Sobel_5qcK* start_for_Sobel_5qcK_U;
    start_for_NonMaxSrcU* start_for_NonMaxSrcU_U;
    start_for_ZeroPadsc4* start_for_ZeroPadsc4_U;
    start_for_HystThrtde* start_for_HystThrtde_U;
    start_for_GrayArrudo* start_for_GrayArrudo_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<8> > hist_hthr;
    sc_signal< sc_lv<8> > hist_lthr;
    sc_signal< sc_logic > ap_rst_n_s_axi_aclk_inv;
    sc_signal< sc_logic > canny_edge_detection_1_1_U0_ap_start;
    sc_signal< sc_logic > canny_edge_detection_1_1_U0_ap_done;
    sc_signal< sc_logic > canny_edge_detection_1_1_U0_ap_continue;
    sc_signal< sc_logic > canny_edge_detection_1_1_U0_ap_idle;
    sc_signal< sc_logic > canny_edge_detection_1_1_U0_ap_ready;
    sc_signal< sc_lv<8> > canny_edge_detection_1_1_U0_hist_hthr_out_din;
    sc_signal< sc_logic > canny_edge_detection_1_1_U0_hist_hthr_out_write;
    sc_signal< sc_lv<8> > canny_edge_detection_1_1_U0_hist_lthr_out_din;
    sc_signal< sc_logic > canny_edge_detection_1_1_U0_hist_lthr_out_write;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_ap_start;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_start_full_n;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_ap_done;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_ap_continue;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_ap_idle;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_ap_ready;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_start_out;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_start_write;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_axis_in_TREADY;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_hist_hthr_read;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_hist_lthr_read;
    sc_signal< sc_lv<8> > AXIS2GrayArray76_U0_hist_hthr_out_din;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_hist_hthr_out_write;
    sc_signal< sc_lv<8> > AXIS2GrayArray76_U0_hist_lthr_out_din;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_hist_lthr_out_write;
    sc_signal< sc_lv<8> > AXIS2GrayArray76_U0_fifo1_din;
    sc_signal< sc_logic > AXIS2GrayArray76_U0_fifo1_write;
    sc_signal< sc_logic > GaussianBlur_U0_ap_start;
    sc_signal< sc_logic > GaussianBlur_U0_ap_done;
    sc_signal< sc_logic > GaussianBlur_U0_ap_continue;
    sc_signal< sc_logic > GaussianBlur_U0_ap_idle;
    sc_signal< sc_logic > GaussianBlur_U0_ap_ready;
    sc_signal< sc_logic > GaussianBlur_U0_start_out;
    sc_signal< sc_logic > GaussianBlur_U0_start_write;
    sc_signal< sc_logic > GaussianBlur_U0_fifo1_read;
    sc_signal< sc_lv<8> > GaussianBlur_U0_fifo2_din;
    sc_signal< sc_logic > GaussianBlur_U0_fifo2_write;
    sc_signal< sc_logic > Sobel_512u_512u_U0_ap_start;
    sc_signal< sc_logic > Sobel_512u_512u_U0_ap_done;
    sc_signal< sc_logic > Sobel_512u_512u_U0_ap_continue;
    sc_signal< sc_logic > Sobel_512u_512u_U0_ap_idle;
    sc_signal< sc_logic > Sobel_512u_512u_U0_ap_ready;
    sc_signal< sc_logic > Sobel_512u_512u_U0_start_out;
    sc_signal< sc_logic > Sobel_512u_512u_U0_start_write;
    sc_signal< sc_logic > Sobel_512u_512u_U0_fifo2_read;
    sc_signal< sc_lv<8> > Sobel_512u_512u_U0_fifo3_value_din;
    sc_signal< sc_logic > Sobel_512u_512u_U0_fifo3_value_write;
    sc_signal< sc_lv<2> > Sobel_512u_512u_U0_fifo3_grad_din;
    sc_signal< sc_logic > Sobel_512u_512u_U0_fifo3_grad_write;
    sc_signal< sc_logic > NonMaxSuppression_U0_ap_start;
    sc_signal< sc_logic > NonMaxSuppression_U0_ap_done;
    sc_signal< sc_logic > NonMaxSuppression_U0_ap_continue;
    sc_signal< sc_logic > NonMaxSuppression_U0_ap_idle;
    sc_signal< sc_logic > NonMaxSuppression_U0_ap_ready;
    sc_signal< sc_logic > NonMaxSuppression_U0_start_out;
    sc_signal< sc_logic > NonMaxSuppression_U0_start_write;
    sc_signal< sc_logic > NonMaxSuppression_U0_fifo3_value_read;
    sc_signal< sc_logic > NonMaxSuppression_U0_fifo3_grad_read;
    sc_signal< sc_lv<8> > NonMaxSuppression_U0_fifo4_din;
    sc_signal< sc_logic > NonMaxSuppression_U0_fifo4_write;
    sc_signal< sc_logic > ZeroPadding_U0_ap_start;
    sc_signal< sc_logic > ZeroPadding_U0_ap_done;
    sc_signal< sc_logic > ZeroPadding_U0_ap_continue;
    sc_signal< sc_logic > ZeroPadding_U0_ap_idle;
    sc_signal< sc_logic > ZeroPadding_U0_ap_ready;
    sc_signal< sc_logic > ZeroPadding_U0_fifo4_read;
    sc_signal< sc_lv<8> > ZeroPadding_U0_fifo5_din;
    sc_signal< sc_logic > ZeroPadding_U0_fifo5_write;
    sc_signal< sc_logic > HystThreshold_U0_ap_start;
    sc_signal< sc_logic > HystThreshold_U0_ap_done;
    sc_signal< sc_logic > HystThreshold_U0_ap_continue;
    sc_signal< sc_logic > HystThreshold_U0_ap_idle;
    sc_signal< sc_logic > HystThreshold_U0_ap_ready;
    sc_signal< sc_logic > HystThreshold_U0_start_out;
    sc_signal< sc_logic > HystThreshold_U0_start_write;
    sc_signal< sc_logic > HystThreshold_U0_hist_hthr_read;
    sc_signal< sc_logic > HystThreshold_U0_hist_lthr_read;
    sc_signal< sc_logic > HystThreshold_U0_fifo5_read;
    sc_signal< sc_lv<8> > HystThreshold_U0_fifo6_din;
    sc_signal< sc_logic > HystThreshold_U0_fifo6_write;
    sc_signal< sc_logic > HystThresholdComp_U0_ap_start;
    sc_signal< sc_logic > HystThresholdComp_U0_ap_done;
    sc_signal< sc_logic > HystThresholdComp_U0_ap_continue;
    sc_signal< sc_logic > HystThresholdComp_U0_ap_idle;
    sc_signal< sc_logic > HystThresholdComp_U0_ap_ready;
    sc_signal< sc_logic > HystThresholdComp_U0_start_out;
    sc_signal< sc_logic > HystThresholdComp_U0_start_write;
    sc_signal< sc_logic > HystThresholdComp_U0_fifo6_read;
    sc_signal< sc_lv<8> > HystThresholdComp_U0_fifo7_din;
    sc_signal< sc_logic > HystThresholdComp_U0_fifo7_write;
    sc_signal< sc_logic > GrayArray2AXIS_U0_ap_start;
    sc_signal< sc_logic > GrayArray2AXIS_U0_ap_done;
    sc_signal< sc_logic > GrayArray2AXIS_U0_ap_continue;
    sc_signal< sc_logic > GrayArray2AXIS_U0_ap_idle;
    sc_signal< sc_logic > GrayArray2AXIS_U0_ap_ready;
    sc_signal< sc_lv<24> > GrayArray2AXIS_U0_axis_out_TDATA;
    sc_signal< sc_logic > GrayArray2AXIS_U0_axis_out_TVALID;
    sc_signal< sc_lv<1> > GrayArray2AXIS_U0_axis_out_TUSER;
    sc_signal< sc_lv<1> > GrayArray2AXIS_U0_axis_out_TLAST;
    sc_signal< sc_logic > GrayArray2AXIS_U0_fifo7_read;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > hist_hthr_c1_full_n;
    sc_signal< sc_lv<8> > hist_hthr_c1_dout;
    sc_signal< sc_logic > hist_hthr_c1_empty_n;
    sc_signal< sc_logic > hist_lthr_c2_full_n;
    sc_signal< sc_lv<8> > hist_lthr_c2_dout;
    sc_signal< sc_logic > hist_lthr_c2_empty_n;
    sc_signal< sc_logic > hist_hthr_c_full_n;
    sc_signal< sc_lv<8> > hist_hthr_c_dout;
    sc_signal< sc_logic > hist_hthr_c_empty_n;
    sc_signal< sc_logic > hist_lthr_c_full_n;
    sc_signal< sc_lv<8> > hist_lthr_c_dout;
    sc_signal< sc_logic > hist_lthr_c_empty_n;
    sc_signal< sc_logic > fifo1_full_n;
    sc_signal< sc_lv<8> > fifo1_dout;
    sc_signal< sc_logic > fifo1_empty_n;
    sc_signal< sc_logic > fifo2_full_n;
    sc_signal< sc_lv<8> > fifo2_dout;
    sc_signal< sc_logic > fifo2_empty_n;
    sc_signal< sc_logic > fifo3_value_full_n;
    sc_signal< sc_lv<8> > fifo3_value_dout;
    sc_signal< sc_logic > fifo3_value_empty_n;
    sc_signal< sc_logic > fifo3_grad_full_n;
    sc_signal< sc_lv<2> > fifo3_grad_dout;
    sc_signal< sc_logic > fifo3_grad_empty_n;
    sc_signal< sc_logic > fifo4_full_n;
    sc_signal< sc_lv<8> > fifo4_dout;
    sc_signal< sc_logic > fifo4_empty_n;
    sc_signal< sc_logic > fifo5_full_n;
    sc_signal< sc_lv<8> > fifo5_dout;
    sc_signal< sc_logic > fifo5_empty_n;
    sc_signal< sc_logic > fifo6_full_n;
    sc_signal< sc_lv<8> > fifo6_dout;
    sc_signal< sc_logic > fifo6_empty_n;
    sc_signal< sc_logic > fifo7_full_n;
    sc_signal< sc_lv<8> > fifo7_dout;
    sc_signal< sc_logic > fifo7_empty_n;
    sc_signal< sc_logic > canny_edge_detection_1_1_U0_start_full_n;
    sc_signal< sc_logic > canny_edge_detection_1_1_U0_start_write;
    sc_signal< sc_lv<1> > start_for_GaussianBlur_U0_din;
    sc_signal< sc_logic > start_for_GaussianBlur_U0_full_n;
    sc_signal< sc_lv<1> > start_for_GaussianBlur_U0_dout;
    sc_signal< sc_logic > start_for_GaussianBlur_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_HystThreshold_U0_din;
    sc_signal< sc_logic > start_for_HystThreshold_U0_full_n;
    sc_signal< sc_lv<1> > start_for_HystThreshold_U0_dout;
    sc_signal< sc_logic > start_for_HystThreshold_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Sobel_512u_512u_U0_din;
    sc_signal< sc_logic > start_for_Sobel_512u_512u_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Sobel_512u_512u_U0_dout;
    sc_signal< sc_logic > start_for_Sobel_512u_512u_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_NonMaxSuppression_U0_din;
    sc_signal< sc_logic > start_for_NonMaxSuppression_U0_full_n;
    sc_signal< sc_lv<1> > start_for_NonMaxSuppression_U0_dout;
    sc_signal< sc_logic > start_for_NonMaxSuppression_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_ZeroPadding_U0_din;
    sc_signal< sc_logic > start_for_ZeroPadding_U0_full_n;
    sc_signal< sc_lv<1> > start_for_ZeroPadding_U0_dout;
    sc_signal< sc_logic > start_for_ZeroPadding_U0_empty_n;
    sc_signal< sc_logic > ZeroPadding_U0_start_full_n;
    sc_signal< sc_logic > ZeroPadding_U0_start_write;
    sc_signal< sc_lv<1> > start_for_HystThresholdComp_U0_din;
    sc_signal< sc_logic > start_for_HystThresholdComp_U0_full_n;
    sc_signal< sc_lv<1> > start_for_HystThresholdComp_U0_dout;
    sc_signal< sc_logic > start_for_HystThresholdComp_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_GrayArray2AXIS_U0_din;
    sc_signal< sc_logic > start_for_GrayArray2AXIS_U0_full_n;
    sc_signal< sc_lv<1> > start_for_GrayArray2AXIS_U0_dout;
    sc_signal< sc_logic > start_for_GrayArray2AXIS_U0_empty_n;
    sc_signal< sc_logic > GrayArray2AXIS_U0_start_full_n;
    sc_signal< sc_logic > GrayArray2AXIS_U0_start_write;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_S_AXI_WSTRB_WIDTH;
    static const int C_S_AXI_ADDR_WIDTH;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_AXIS2GrayArray76_U0_ap_continue();
    void thread_AXIS2GrayArray76_U0_ap_start();
    void thread_AXIS2GrayArray76_U0_start_full_n();
    void thread_GaussianBlur_U0_ap_continue();
    void thread_GaussianBlur_U0_ap_start();
    void thread_GrayArray2AXIS_U0_ap_continue();
    void thread_GrayArray2AXIS_U0_ap_start();
    void thread_GrayArray2AXIS_U0_start_full_n();
    void thread_GrayArray2AXIS_U0_start_write();
    void thread_HystThresholdComp_U0_ap_continue();
    void thread_HystThresholdComp_U0_ap_start();
    void thread_HystThreshold_U0_ap_continue();
    void thread_HystThreshold_U0_ap_start();
    void thread_NonMaxSuppression_U0_ap_continue();
    void thread_NonMaxSuppression_U0_ap_start();
    void thread_Sobel_512u_512u_U0_ap_continue();
    void thread_Sobel_512u_512u_U0_ap_start();
    void thread_ZeroPadding_U0_ap_continue();
    void thread_ZeroPadding_U0_ap_start();
    void thread_ZeroPadding_U0_start_full_n();
    void thread_ZeroPadding_U0_start_write();
    void thread_ap_rst_n_inv();
    void thread_ap_rst_n_s_axi_aclk_inv();
    void thread_ap_sync_continue();
    void thread_axis_in_TREADY();
    void thread_axis_out_TDATA();
    void thread_axis_out_TLAST();
    void thread_axis_out_TUSER();
    void thread_axis_out_TVALID();
    void thread_canny_edge_detection_1_1_U0_ap_continue();
    void thread_canny_edge_detection_1_1_U0_ap_start();
    void thread_canny_edge_detection_1_1_U0_start_full_n();
    void thread_canny_edge_detection_1_1_U0_start_write();
    void thread_start_for_GaussianBlur_U0_din();
    void thread_start_for_GrayArray2AXIS_U0_din();
    void thread_start_for_HystThresholdComp_U0_din();
    void thread_start_for_HystThreshold_U0_din();
    void thread_start_for_NonMaxSuppression_U0_din();
    void thread_start_for_Sobel_512u_512u_U0_din();
    void thread_start_for_ZeroPadding_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
